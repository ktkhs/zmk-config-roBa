#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        ctrlall {
            bindings = <&kp LC(A)>;
            key-positions = <10 11>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 0>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 9>;
        };

        shifttab {
            bindings = <&kp LS(TAB)>;
            key-positions = <1 2>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };

        haihun {
            bindings = <&kp MINUS>;
            key-positions = <19 18>;
        };

        quate {
            bindings = <&kp SQT>;
            key-positions = <20 19>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        reset_ime_to_layer: reset_ime_to_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LANGUAGE_2>,
                <&macro_release>,
                <&lt 3 SPACE>;

            label = "RESET_IME_TO_LAYER";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E         &kp R        &kp T                                                      &kp Y             &kp U  &kp I      &kp O    &kp P
&mt LEFT_CONTROL A  &kp S         &kp D         &kp F        &kp G             &kp SQT               &kp MINUS          &kp H             &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z    &kp X         &kp C         &kp V        &kp B             &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp N             &kp M  &kp COMMA  &kp DOT  &kp SLASH
&lt 1 TAB           &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 SPACE  &lt 2 LANGUAGE_2  &mkp MB1              &lt 6 BACKSPACE    &lt 2 LANGUAGE_1                             &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4  &kp F5                          &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &kp F13  &trans  &kp ESCAPE  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans   &trans   &trans  &trans      &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans   &trans   &trans  &trans      &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                               &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp N0
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp PERCENT   &kp ASTERISK  &trans         &trans  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_SHIFT   &trans        &trans        &trans        &trans        &kp EQUAL      &trans  &trans        &trans         &trans        &kp BACKSLASH         &kp UNDER
&trans           &trans        &trans        &trans        &trans        &trans         &trans  &trans                                                           &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp TAB         &kp LC(C)  &kp END     &trans           &trans                        &kp LC(V)      &trans  &kp MINUS  &kp EQUAL  &kp UP_ARROW
&kp HOME        &trans     &kp DELETE  &kp RIGHT_ARROW  &kp END   &trans      &trans  &kp BACKSPACE  &trans  &trans     &trans     &kp SEMICOLON
&kp LEFT_SHIFT  &trans     &trans      &trans           &kp LEFT  &trans      &trans  &kp DOWN       &trans  &trans     &trans     &trans
&trans          &trans     &trans      &trans           &trans    &trans      &trans  &trans                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
